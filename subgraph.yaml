specVersion: 0.0.2
description: Swarm Contract Issuance
repository: https://github.com/my-swarm/subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Registry
    network: mainnet
    source:
      address: "0x0078371BDeDE8aAc7DeBfFf451B74c5EDB385Af7"
      abi: SRC20Registry
#      startBlock: 20670075
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/registry.ts
      abis:
        - name: SRC20Registry
          file: ./abis/SRC20Registry.json
      entities:
        - Registry
      eventHandlers:
        - event: SRC20Removed(address)
          handler: handleSRC20Removed
        - event: SRC20SupplyIncreased(address,address,uint256,uint256)
          handler: handleSupplyIncreased
        - event: SRC20SupplyDecreased(address,address,uint256,uint256)
          handler: handleSupplyDecreased
# Events skipped for now:
# - FactoryAdded (we only use one)
# - FactoryRemoved
# - SRC20Registered (the logic handled by SRC20Factory.SRC20Created)
# - MinterAdded (we only use one)
# - MinterRemoved

  - kind: ethereum/contract
    name: Factory
    network: mainnet
    source:
      address: "0xf4e77E5Da47AC3125140c470c71cBca77B5c638c"
      abi: SRC20Factory
#      startBlock: 20670075
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/factory.ts
      abis:
        - name: SRC20Factory
          file: ./abis/SRC20Factory.json
      entities:
        - Factory
      eventHandlers:
        - event: SRC20Created(address,address,address,string,string,uint8,uint256,bytes32,string)
          handler: handleSRC20Created

templates:
  - name: Token
    network: mainnet
    kind: ethereum/contract
    source:
      abi: SRC20
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: './src/mappings/token.ts'
      abis:
        - name: SRC20
          file: ./abis/SRC20.json
      entities:
        - Token
        - TokenHolder
        - Transfer
      eventHandlers:
        - event: FundraiserAdded(address)
          handler: handleFundraiserAdded
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer

  - name: TransferRules
    network: mainnet
    kind: ethereum/contract
    source:
      abi: TransferRules
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: './src/mappings/transferRules.ts'
      abis:
        - name: TransferRules
          file: ./abis/TransferRules.json
      entities:
        - Token
        - TransferRequest
      eventHandlers:
        - event: AccountWhitelisted(address,address)
          handler: handleWhitelisted
        - event: AccountUnWhitelisted(address,address)
          handler: handleUnWhitelisted
        - event: AccountGreylisted(address,address)
          handler: handleGreylisted
        - event: AccountUnGreylisted(address,address)
          handler: handleUnGreylisted
        - event: TransferRequested(indexed uint256,address,address,uint256)
          handler: handleTransferRequested
        - event: TransferApproved(indexed uint256,indexed address,indexed address,uint256)
          handler: handleTransferApproved
        - event: TransferDenied(indexed uint256,indexed address,indexed address,uint256)
          handler: handleTransferDenied

  - name: Fundraiser
    network: mainnet
    kind: ethereum/contract
    source:
      abi: Fundraiser
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: './src/mappings/fundraiser.ts'
      abis:
        - name: Fundraiser
          file: ./abis/Fundraiser.json
      entities:
        - Fundraiser
      eventHandlers:
#        - event: FundraiserCreated(string,address,uint256,uint256,uint256,uint256,uint256)
#          handler: handleFundraiserCreated
        - event: FundraiserSetup(address,uint256,address,address,address,bool)
          handler: handleFundraiserSetup
        - event: ContributionPending(indexed address,uint256)
          handler: handleContributionPending
        - event: ContributionAdded(indexed address,uint256)
          handler: handleContributionAdded
        - event: PendingContributionAccepted(indexed address,uint256)
          handler: handlePendingContributionAccepted

#    event ContributionRefunded(address indexed account, uint amount);
#    event ContributorAccepted(address account);
#    event ContributorRemoved(address account);
#    event TokensClaimed(address indexed account, uint amount);
#    event FundsWithdrawal(address indexed account, uint amount);
#    event ReferralCollected(address indexed account, uint amount);
